<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>