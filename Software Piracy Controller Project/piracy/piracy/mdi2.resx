<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnLogin.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAASMAAAA+CAYAAABgH33cAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAAPKSURBVHhe7d1PSJRBHMbxQRAlggwilCAEiUQCS8QSCaQQ
        RfIPiCBJsIFFf6CEBFvd0IunDnXx0iUv0aFDeKlLUCc7dFi65CWITh685MXMzd7mNzuzas7qmu/aBN8H
        Pojv7jveHn4z7y4qQgghhBBCCCGEEEIIIYQQQkhcmYhU+XhGtVqTAPCHDq1Vd0WFrY34ohetHFtVw6mf
        Kq1FAFCg+dSaepRcUbW2Tv4uUkKy0PiqWnGLJ5dLopsfjxgDL05E/c9OAkCO64fRpdJNxaSnpee6U6pt
        vRQePQmd0yX0zS00NFcVtU81RQ39XVF9Tw8A7OjCWEt05VW1GWJMIWUHmwFbMzsnlVG9bhqShjt/t9X7
        hwCgEM3X2sxA44YbOVuydZM/diIyRZR4c5xJCEBsep+cyhWS7pobtna2Rs6I3NZMisi3GADsRfd0fW7L
        JsOPrZ/NkcNqeZNszZiIABTL4GyNm5DStn7WI6fcbnvGGRGAYpJhZ2SxLFtIGdVraygbOVCSF+SQyXcz
        AMRpw/nRa1tD2egL8/KCPIrz3QgAcTqb6DBlpAeh73pnVm6KyHy4UV+UDylxVgRgv8j5tHRPbqsm3yOR
        C/KC7wYAKAZ3kJ17zK9/ScgFHucD2E99M3Vuq5b9EKQ7vJbvmvluAIBiyFtG8iU33w0AUAzSOZQRgH+O
        MgIQBMoIQBAoIwBBoIwABIEyAhAEyghAECgjAEGgjAAEgTICEATKCEAQKCMAQaCMAASBMgIQBMoIQBAo
        IwBBoIwABIEyAhAEyghAECgjAEGgjAAEYUsZyT9Qkwv83zQA+6l7un7LZNQhF65/OOq9AQCKwU1GeiAa
        NmWUXFG1cmH460HvDQBQDENzVaaMtAFTRhI9HS3IxZZbF703AUCcGvq7ouRyiSmjiUhV2ypS6sGaeioX
        OcQGsB/ap5rcVPTe1lA27txoZLEsarzc6b0ZAOJy5/MhU0a586KN0S+8lRcHZ2u8NwNAHDofNpoikuMh
        vUUrtxW0nrEf6rS8QcgI5VsEAPZCzqXdWZF8rMjWz9aMr6r78iZ5M4UEIE5SRPcWDmSnop/qpa2d/HGH
        2aJvps67KADshmzNRpdKf9luSXu3Z77IJyJdIUmTXXp8xjyK8/0RAMinbbI5uv3psOkSIRORLqIKWzWF
        JZVRvfrmL24R2bpdfXfMPP6XcpKfALCRTEDyU75epieh9RLKqAXvk7PdRC+U0NJuUQDYhXk5i971NLRd
        9GKVcvotWzgA2I5MQfJVM1sfhBBCCCGEEEIIIYQQQsj/GKV+A7rqlo6jwbo9AAAAAElFTkSuQmCC
</value>
  </data>
</root>